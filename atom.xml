<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码上有约</title>
  
  <subtitle>为一桩事业呕心沥血、为一种梦想至死不渝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.msyy233.com/"/>
  <updated>2020-07-13T15:22:52.846Z</updated>
  <id>http://www.msyy233.com/</id>
  
  <author>
    <name>程大明</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于分布式日志平台的思考</title>
    <link href="http://www.msyy233.com/posts/14778.html"/>
    <id>http://www.msyy233.com/posts/14778.html</id>
    <published>2021-07-01T03:07:39.408Z</published>
    <updated>2020-07-13T15:22:52.846Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;日志的基本概念&quot;&gt;&lt;a href=&quot;#日志的基本概念&quot; class=&quot;headerlink&quot; title=&quot;日志的基本概念&quot;&gt;&lt;/a&gt;日志的基本概念&lt;/h1&gt;&lt;p&gt;日志就是按照时间顺序追加的、完全有序的记录序列、其实就是一种特殊的文件格式、文件是一个字节数组、而这里日志是一个记录数据、只是相对于文件来说、这里每条记录都是按照时间的相对顺序排列的、可以说日志是最简单的一种存储模型、&lt;/p&gt;
&lt;h1 id=&quot;常见的日志框架&quot;&gt;&lt;a href=&quot;#常见的日志框架&quot; class=&quot;headerlink&quot; title=&quot;常见的日志框架&quot;&gt;&lt;/a&gt;常见的日志框架&lt;/h1&gt;&lt;p&gt;目前主流几款日志框架为log4j、logback、log4j2、jdk-logging等、当然绝大多数情况下大家都使用了sl4j框架作为日志门面、&lt;br&gt;不同日志框架API也相差不大、基本都是依赖Append记录、例如：log4j2和log4j都有自己和官方实现的Kafka Append、logback可能需要自己开发、&lt;br&gt;在Append的背后还有Encoder/Layout、简单的说就是日志输出的格式、不同框架的命名虽然不同、但是概念也是完全相同的、实现自己的Encoder/Layout格式化Event输出到文件、再通过收集工具处理、与直接改造Append输出到对应后端是日志收集的常见做法、&lt;/p&gt;
&lt;p&gt;除了logback原生实现了sl4j门面、其他的框架大都提供了对应的桥接工具包、大体逻辑可以参考下图：&lt;/p&gt;
    
    </summary>
    
    
      <category term="log" scheme="http://www.msyy233.com/categories/log/"/>
    
    
      <category term="logstash" scheme="http://www.msyy233.com/tags/logstash/"/>
    
      <category term="elk" scheme="http://www.msyy233.com/tags/elk/"/>
    
      <category term="kibana" scheme="http://www.msyy233.com/tags/kibana/"/>
    
      <category term="filebeat" scheme="http://www.msyy233.com/tags/filebeat/"/>
    
      <category term="kafka" scheme="http://www.msyy233.com/tags/kafka/"/>
    
      <category term="elasticsearch" scheme="http://www.msyy233.com/tags/elasticsearch/"/>
    
      <category term="flume" scheme="http://www.msyy233.com/tags/flume/"/>
    
      <category term="fluentd" scheme="http://www.msyy233.com/tags/fluentd/"/>
    
      <category term="fluent-bit" scheme="http://www.msyy233.com/tags/fluent-bit/"/>
    
      <category term="efk" scheme="http://www.msyy233.com/tags/efk/"/>
    
      <category term="es" scheme="http://www.msyy233.com/tags/es/"/>
    
      <category term="日志平台" scheme="http://www.msyy233.com/tags/%E6%97%A5%E5%BF%97%E5%B9%B3%E5%8F%B0/"/>
    
      <category term="日志分析" scheme="http://www.msyy233.com/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
      <category term="实时计算" scheme="http://www.msyy233.com/tags/%E5%AE%9E%E6%97%B6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="storm" scheme="http://www.msyy233.com/tags/storm/"/>
    
      <category term="flink" scheme="http://www.msyy233.com/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>Java NIO系列（一）核心组件</title>
    <link href="http://www.msyy233.com/posts/49866.html"/>
    <id>http://www.msyy233.com/posts/49866.html</id>
    <published>2021-07-01T03:07:39.405Z</published>
    <updated>2019-08-04T16:01:38.319Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;看过&lt;a href=&quot;https://www.msyy233.com/posts/52540.html&quot;&gt;IO概念和5种IO模型&lt;/a&gt;、可以了解到IO的五种模型、NIO便是对应其中的&lt;em&gt;&lt;strong&gt;IO复用模型&lt;/strong&gt;&lt;/em&gt;、本篇对NIO的组件进行讲解、如果还不理解什么是NIO建议先看一看上一篇&lt;a href=&quot;https://www.msyy233.com/posts/52540.html&quot;&gt;IO概念和5种IO模型&lt;/a&gt;、&lt;/p&gt;
&lt;p&gt;Java NIO是由以下几个核心部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Channels&lt;/li&gt;
&lt;li&gt;Buffers&lt;/li&gt;
&lt;li&gt;Selectors&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;虽然Java NIO 中除此之外还有很多类和组件、但在我看来Channel、Buffer和Selector构成了核心的API、其它组件、如Pipe和FileLock、只不过是与三个核心组件共同使用的工具类、&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="io" scheme="http://www.msyy233.com/categories/io/"/>
    
    
      <category term="nio" scheme="http://www.msyy233.com/tags/nio/"/>
    
      <category term="io" scheme="http://www.msyy233.com/tags/io/"/>
    
      <category term="channel" scheme="http://www.msyy233.com/tags/channel/"/>
    
      <category term="buffer" scheme="http://www.msyy233.com/tags/buffer/"/>
    
      <category term="selector" scheme="http://www.msyy233.com/tags/selector/"/>
    
      <category term="java" scheme="http://www.msyy233.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>如何做好职业生涯规划</title>
    <link href="http://www.msyy233.com/posts/60194.html"/>
    <id>http://www.msyy233.com/posts/60194.html</id>
    <published>2021-03-10T08:20:18.000Z</published>
    <updated>2021-03-10T09:08:45.240Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;color:red;font-size:xx-large;&quot;&gt;&lt;strong&gt;让你的人生充满喜悦！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、职业生涯规划的意义&quot;&gt;&lt;a href=&quot;#一、职业生涯规划的意义&quot; class=&quot;headerlink&quot; title=&quot;一、职业生涯规划的意义&quot;&gt;&lt;/a&gt;一、职业生涯规划的意义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以既有的成就为基础，确立人生的方向，提供奋斗的策略。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;突破生活的格线，塑造清新充实的自我。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;准确评价个人特点和强项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;评估个人目标和现状的差距。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;准确定位职业方向。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新认识自身的价值并使其增值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现新的职业机遇。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;增强职业竞争力。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将个人、事业与家庭联系起来。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="feeling" scheme="http://www.msyy233.com/categories/feeling/"/>
    
    
      <category term="成长感悟" scheme="http://www.msyy233.com/tags/%E6%88%90%E9%95%BF%E6%84%9F%E6%82%9F/"/>
    
      <category term="个人成长" scheme="http://www.msyy233.com/tags/%E4%B8%AA%E4%BA%BA%E6%88%90%E9%95%BF/"/>
    
      <category term="职业规划" scheme="http://www.msyy233.com/tags/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>常见APM技术选型</title>
    <link href="http://www.msyy233.com/posts/25037.html"/>
    <id>http://www.msyy233.com/posts/25037.html</id>
    <published>2019-08-03T23:53:37.000Z</published>
    <updated>2020-12-14T09:11:01.412Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、技术调研&quot;&gt;&lt;a href=&quot;#一、技术调研&quot; class=&quot;headerlink&quot; title=&quot;一、技术调研&quot;&gt;&lt;/a&gt;一、技术调研&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Zipkin是Twitter开源的调用链分析工具、目前基于SpringCloud Sleuth得到了广泛的使用、特点是轻量、使用部署简单&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Pinpoint是韩国人开源的基于字节码注入的调用链分析、以及应用监控分析工具、特点是支持多种插件、UI功能强大、接入端无代码侵入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;SkyWalking是本土开源的基于字节码注入的调用链分析、以及应用监控分析工具、目前已Apache孵化器毕业、特点是支持多种插件、UI功能强大、接入端无代码侵入、提供应用Agent交互包、&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;CAT是大众点评开源的基于编码和配置的调用链分析、应用监控分析、日志采集、监控报警等一系列的监控平台工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Pradar是数列公司的一个产品、并非开源项目、Pradar和Pinpoint一样也是基于字节码注入的调用链分析、Agent部分的代码也十分相似、&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="apm" scheme="http://www.msyy233.com/categories/apm/"/>
    
    
      <category term="pinpoint" scheme="http://www.msyy233.com/tags/pinpoint/"/>
    
      <category term="zipkin" scheme="http://www.msyy233.com/tags/zipkin/"/>
    
      <category term="SkyWalking" scheme="http://www.msyy233.com/tags/SkyWalking/"/>
    
      <category term="pradar" scheme="http://www.msyy233.com/tags/pradar/"/>
    
      <category term="cat" scheme="http://www.msyy233.com/tags/cat/"/>
    
  </entry>
  
  <entry>
    <title>缓存IO、直接IO与内存映射</title>
    <link href="http://www.msyy233.com/posts/51696.html"/>
    <id>http://www.msyy233.com/posts/51696.html</id>
    <published>2019-03-09T14:02:37.000Z</published>
    <updated>2019-03-13T14:02:37.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;文件系统IO分为Direct IO和Buffer IO、其中BufferIO也叫Normal IO、除此之外还有一个MMAP内存映射技术、&lt;strong&gt;由于涉及很多Linux内核知识、所以这里只讲述关键的知识点、用于学习Java NIO的时候不会太过疑惑&lt;/strong&gt;、其余详细的系统底层知识有机会额外花时间讲述、&lt;/p&gt;
&lt;h1 id=&quot;一、缓存IO&quot;&gt;&lt;a href=&quot;#一、缓存IO&quot; class=&quot;headerlink&quot; title=&quot;一、缓存IO&quot;&gt;&lt;/a&gt;一、缓存IO&lt;/h1&gt;&lt;p&gt;多数文件系统的默认IO操作都是缓存IO、在Linux的缓存IO机制中、操作系统会将IO的数据缓存在文件系统的页缓存（page cache）中、也就是说、数据会先被拷贝到操作系统内核的缓冲区中、然后才会从操作系统内核的缓冲区拷贝到应用程序的地址空间、这里可以看看&lt;a href=&quot;https://www.msyy233.com/posts/52540.html&quot;&gt;IO的概念和5种IO模型&lt;/a&gt;中的IO交互章节、下面是两张概念图、第二张更简洁便于理解、&lt;/p&gt;
    
    </summary>
    
    
      <category term="io" scheme="http://www.msyy233.com/categories/io/"/>
    
    
      <category term="nio" scheme="http://www.msyy233.com/tags/nio/"/>
    
      <category term="io" scheme="http://www.msyy233.com/tags/io/"/>
    
      <category term="直接IO" scheme="http://www.msyy233.com/tags/%E7%9B%B4%E6%8E%A5IO/"/>
    
      <category term="内存映射" scheme="http://www.msyy233.com/tags/%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84/"/>
    
      <category term="MMAP" scheme="http://www.msyy233.com/tags/MMAP/"/>
    
      <category term="缓存IO" scheme="http://www.msyy233.com/tags/%E7%BC%93%E5%AD%98IO/"/>
    
      <category term="Linux" scheme="http://www.msyy233.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>常见开源协议简介</title>
    <link href="http://www.msyy233.com/posts/7105.html"/>
    <id>http://www.msyy233.com/posts/7105.html</id>
    <published>2018-07-23T13:21:37.000Z</published>
    <updated>2018-07-25T13:21:37.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;当Adobe、Microsoft、Sun等一系列巨头开始表现出对开源的青睐时、开源的时代早已到来、现今存在的开源协议很多、而经过Open Source Initiative组织通过批准的开源协议目前有&lt;a href=&quot;http://www.opensource.org/licenses/alphabetical&quot;&gt;83种&lt;/a&gt;、我们在常见的开源协议如BSD、GPL、LGPL、MIT等都是OSI批准的协议、如果要开源自己的代码、最好也是选择这些被批准的开源协议、这里我们来看四种最常用的开源协议及它们的适用范围、供那些准备开源或者使用开源产品的开发人员/厂家参考  &lt;/p&gt;
&lt;h2 id=&quot;BSD开源协议-original-BSD-license-FreeBSD-license-Original-BSD-license&quot;&gt;&lt;a href=&quot;#BSD开源协议-original-BSD-license-FreeBSD-license-Original-BSD-license&quot; class=&quot;headerlink&quot; title=&quot;BSD开源协议(original BSD license/FreeBSD license/Original BSD license)&quot;&gt;&lt;/a&gt;BSD开源协议(original BSD license/FreeBSD license/Original BSD license)&lt;/h2&gt;&lt;p&gt;BSD开源协议是一个给于使用者很大自由的协议、基本上使用者可以为所欲为、可以自由的使用、修改源代码、也可以将修改后的代码作为开源或者专有软件再发布、但为所欲为的前提当你发布使用了BSD协议的代码或则以BSD协议代码为基础做二次开发自己的产品时、需要满足三个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;如果再发布的产品中包含源代码、则在源代码中必须带有原来代码中的BSD协议、如果再发布的只是二进制类库/软件、则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不可以用开源代码的作者/机构名字和原来产品的名字做市场推广、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BSD代码鼓励代码共享、但需要尊重代码作者的著作权、BSD由于允许使用者修改和重新发布代码、也允许使用或在BSD代码上开发商业软件发布和销售、因此是对商业集成很友好的协议、而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码、在必要的时候可以修改或者二次开发、&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="other" scheme="http://www.msyy233.com/categories/other/"/>
    
    
      <category term="Apache" scheme="http://www.msyy233.com/tags/Apache/"/>
    
      <category term="BSD" scheme="http://www.msyy233.com/tags/BSD/"/>
    
      <category term="GPL" scheme="http://www.msyy233.com/tags/GPL/"/>
    
      <category term="LGPL" scheme="http://www.msyy233.com/tags/LGPL/"/>
    
      <category term="MIT" scheme="http://www.msyy233.com/tags/MIT/"/>
    
      <category term="开源协议" scheme="http://www.msyy233.com/tags/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>位运算和移位运算</title>
    <link href="http://www.msyy233.com/posts/61738.html"/>
    <id>http://www.msyy233.com/posts/61738.html</id>
    <published>2018-06-26T00:20:18.000Z</published>
    <updated>2019-11-26T01:50:38.502Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、位运算&quot;&gt;&lt;a href=&quot;#一、位运算&quot; class=&quot;headerlink&quot; title=&quot;一、位运算&quot;&gt;&lt;/a&gt;一、位运算&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;位运算符包括:　与（&amp;amp;）、非（~）、或（|）、异或（^）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;amp;：相同位的两个数字都为1、则为1；若有一个不为1、则为0、&lt;br&gt; 例：00101 &amp;amp; 11100 = 00100&lt;/li&gt;
&lt;li&gt;|：相同位只要一个为1即为1、&lt;br&gt; 例：00101 | 11100 = 11101&lt;/li&gt;
&lt;li&gt;~：运算的定义是把内存中的0和1全部取反、使用not运算时要格外小心、你需要注意整数类型有没有符号、如果not的对象是无符号整数（不能表示负数）、那么得到的值就是它与该类型上界的差、因为无符号类型的数是用00到$FFFF依次表示的、&lt;br&gt; 例：~‭00101 = 11010&lt;/li&gt;
&lt;li&gt;^：相同位不同则为1、相同则为0、&lt;br&gt; 例：00101 ^ 11100 = 11001&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="basis" scheme="http://www.msyy233.com/categories/basis/"/>
    
    
      <category term="位运算" scheme="http://www.msyy233.com/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="移位运算" scheme="http://www.msyy233.com/tags/%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="左移位" scheme="http://www.msyy233.com/tags/%E5%B7%A6%E7%A7%BB%E4%BD%8D/"/>
    
      <category term="右移位" scheme="http://www.msyy233.com/tags/%E5%8F%B3%E7%A7%BB%E4%BD%8D/"/>
    
      <category term="无符号移位" scheme="http://www.msyy233.com/tags/%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%A7%BB%E4%BD%8D/"/>
    
  </entry>
  
  <entry>
    <title>Excel生成SQL INSERT语句</title>
    <link href="http://www.msyy233.com/posts/12817.html"/>
    <id>http://www.msyy233.com/posts/12817.html</id>
    <published>2018-06-25T03:06:25.000Z</published>
    <updated>2018-06-28T03:06:25.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、领导分配的任务&quot;&gt;&lt;a href=&quot;#一、领导分配的任务&quot; class=&quot;headerlink&quot; title=&quot;一、领导分配的任务&quot;&gt;&lt;/a&gt;一、领导分配的任务&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;刘总：&lt;/strong&gt;小明、你把我给的这些菜单信息导入数据库、&lt;br&gt;&lt;strong&gt;小明：&lt;/strong&gt;好的、刘总&lt;/p&gt;
&lt;p&gt;&lt;em&gt;然后小明作为一个小小的码农、丝毫没有反抗的想法、默默的拿着这样一份的Excel开始想办法&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://assets.msyy233.com/20180625/1642428c8.png!blog&quot; alt=&quot;菜单图片&quot;&gt;  &lt;/p&gt;
    
    </summary>
    
    
      <category term="trick" scheme="http://www.msyy233.com/categories/trick/"/>
    
    
      <category term="excel" scheme="http://www.msyy233.com/tags/excel/"/>
    
      <category term="sql" scheme="http://www.msyy233.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Spring的BeanFactory和FactoryBean</title>
    <link href="http://www.msyy233.com/posts/17047.html"/>
    <id>http://www.msyy233.com/posts/17047.html</id>
    <published>2018-06-23T04:30:37.000Z</published>
    <updated>2018-06-24T04:30:37.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;﻿&lt;strong&gt;Spring有两个自带接口、BeanFactory和FactoryBean、这两个接口虽然名字差不多、但是实际上确实完全不一样的两种东西&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;一、BeanFactory&quot;&gt;&lt;a href=&quot;#一、BeanFactory&quot; class=&quot;headerlink&quot; title=&quot;一、BeanFactory&quot;&gt;&lt;/a&gt;一、BeanFactory&lt;/h2&gt;&lt;p&gt;BeanFactory定义了IOC容器的最基本形式、并提供了IOC容器应遵守的的最基本的接口、  也就是Spring IOC所遵守的最底层和最基本的编程规范、  在Spring代码中、BeanFactory只是个接口、并不是 IOC 容器的具体实现&lt;/p&gt;
&lt;p&gt;但是Spring容器给出了很多种实现、如DefaultListableBeanFactory、XmlBeanFactory、ApplicationContext等、都是附加了某种功能的实现、具体我们可以在Eclipse中打开类结构&lt;/p&gt;
    
    </summary>
    
    
      <category term="spring" scheme="http://www.msyy233.com/categories/spring/"/>
    
    
      <category term="Spring" scheme="http://www.msyy233.com/tags/Spring/"/>
    
      <category term="BeanFactory" scheme="http://www.msyy233.com/tags/BeanFactory/"/>
    
      <category term="FactoryBean" scheme="http://www.msyy233.com/tags/FactoryBean/"/>
    
  </entry>
  
  <entry>
    <title>IO的概念和5种IO模型</title>
    <link href="http://www.msyy233.com/posts/52540.html"/>
    <id>http://www.msyy233.com/posts/52540.html</id>
    <published>2018-06-01T09:53:37.000Z</published>
    <updated>2018-06-05T09:53:37.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、什么是IO？&quot;&gt;&lt;a href=&quot;#一、什么是IO？&quot; class=&quot;headerlink&quot; title=&quot;一、什么是IO？&quot;&gt;&lt;/a&gt;一、什么是IO？&lt;/h1&gt;&lt;p&gt;我们都知道unix世界里、一切皆文件、而文件是什么呢？文件就是一串二进制流而已、不管socket、还是FIFO、管道、终端、对我们来说、一切都是文件、一切都是流、在信息交换的过程中、我们都是对这些流进行数据的收发操作、简称为I/O操作(input and output)、往流中读出数据、系统调用read、写入数据、系统调用write、不过话说回来了、计算机里有这么多的流、我怎么知道要操作哪个流呢？做到这个的就是文件描述符、即通常所说的fd、一个fd就是一个整数、所以对这个整数的操作、就是对这个文件（流）的操作、我们创建一个socket、通过系统调用会返回一个文件描述符、那么剩下对socket的操作就会转化为对这个描述符的操作、不能不说这又是一种分层和抽象的思想、  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;PS：本文中的IO概念只针对缓冲IO、具体可以阅读&lt;a href=&quot;https://www.msyy233.com/posts/51696.html&quot;&gt;缓存IO、直接IO与内存映射&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;二、IO交互&quot;&gt;&lt;a href=&quot;#二、IO交互&quot; class=&quot;headerlink&quot; title=&quot;二、IO交互&quot;&gt;&lt;/a&gt;二、IO交互&lt;/h1&gt;&lt;p&gt;通常用户进程中的一个完整IO分为两阶段：&lt;br&gt;&lt;img src=&quot;http://assets.msyy233.com/20180607/112239bb4.png!blog&quot; alt=&quot;IO交互图_1&quot;&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户空间 &amp;lt;—–&amp;gt; 内核空间、&lt;/li&gt;
&lt;li&gt;内核空间 &amp;lt;—–&amp;gt; 设备空间、&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="io" scheme="http://www.msyy233.com/categories/io/"/>
    
    
      <category term="io模型" scheme="http://www.msyy233.com/tags/io%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="nio" scheme="http://www.msyy233.com/tags/nio/"/>
    
      <category term="io" scheme="http://www.msyy233.com/tags/io/"/>
    
      <category term="aio" scheme="http://www.msyy233.com/tags/aio/"/>
    
      <category term="bio" scheme="http://www.msyy233.com/tags/bio/"/>
    
  </entry>
  
  <entry>
    <title>这些话很能表达我最近一次换工作的感受</title>
    <link href="http://www.msyy233.com/posts/36417.html"/>
    <id>http://www.msyy233.com/posts/36417.html</id>
    <published>2018-05-18T14:02:37.000Z</published>
    <updated>2018-05-20T14:02:37.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、跳槽穷半年、改行穷三年&quot;&gt;&lt;a href=&quot;#一、跳槽穷半年、改行穷三年&quot; class=&quot;headerlink&quot; title=&quot;一、跳槽穷半年、改行穷三年&quot;&gt;&lt;/a&gt;一、跳槽穷半年、改行穷三年&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;不要轻易离开团队、否则你要从零做起、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要老想着做不顺就放弃、哪个团队都有问题、哪个团队都有优点、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跟对领导很重要、愿意教你的、放手让你做的领导、绝对要珍惜、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;团队的问题就是你脱颖而出的机会、抱怨和埋怨团队就是打自己耳光、说自己无能、更是在放弃机会、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;心怀感恩之心、感谢系统给你平台、感谢伙伴给你配合、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创造利润是你存在的核心价值、创业不是做慈善、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遇到问题请先思考、只反映问题是初级水平、思考并解决问题才是高级水平、&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="feeling" scheme="http://www.msyy233.com/categories/feeling/"/>
    
    
      <category term="成长感悟" scheme="http://www.msyy233.com/tags/%E6%88%90%E9%95%BF%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE通过路径或域名获取资源</title>
    <link href="http://www.msyy233.com/posts/29966.html"/>
    <id>http://www.msyy233.com/posts/29966.html</id>
    <published>2018-05-12T06:32:37.000Z</published>
    <updated>2018-05-14T06:32:37.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、通过路径&quot;&gt;&lt;a href=&quot;#一、通过路径&quot; class=&quot;headerlink&quot; title=&quot;一、通过路径&quot;&gt;&lt;/a&gt;一、通过路径&lt;/h2&gt;&lt;h3 id=&quot;1、使用ServletContext&quot;&gt;&lt;a href=&quot;#1、使用ServletContext&quot; class=&quot;headerlink&quot; title=&quot;1、使用ServletContext&quot;&gt;&lt;/a&gt;1、使用ServletContext&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 这里将获取的path是web项目的全路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 例如：E:/workspace/webapp/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * webapp是我web项目的根目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String path = servletContext.getRealPath(&lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.msyy233.com/categories/java/"/>
    
    
      <category term="javaee路径" scheme="http://www.msyy233.com/tags/javaee%E8%B7%AF%E5%BE%84/"/>
    
      <category term="web项目根域名" scheme="http://www.msyy233.com/tags/web%E9%A1%B9%E7%9B%AE%E6%A0%B9%E5%9F%9F%E5%90%8D/"/>
    
      <category term="类路径获取" scheme="http://www.msyy233.com/tags/%E7%B1%BB%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96/"/>
    
      <category term="Java资源路径" scheme="http://www.msyy233.com/tags/Java%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>Java不定长参数</title>
    <link href="http://www.msyy233.com/posts/33024.html"/>
    <id>http://www.msyy233.com/posts/33024.html</id>
    <published>2018-05-12T06:32:37.000Z</published>
    <updated>2018-05-14T06:32:37.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;在Java5中提供了不定长参数（varargs:variable number of arguments）、也就是在方法定义中可以使用个数不确定的参数、对于同一方法可以使用不同个数的参数调用、下面介绍如何定义不定长参数、以及如何使用不定长参数、&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;一、不定长参数的基本使用&quot;&gt;&lt;a href=&quot;#一、不定长参数的基本使用&quot; class=&quot;headerlink&quot; title=&quot;一、不定长参数的基本使用&quot;&gt;&lt;/a&gt;一、不定长参数的基本使用&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;定义实参个数可变的方法：只要在一个形参的类型与参数名之间加上三个连续的 “.”（即 “…”、英文里的句中省略号）、就可以让它和不确定个实参相匹配。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.msyy233.com/categories/java/"/>
    
    
      <category term="java" scheme="http://www.msyy233.com/tags/java/"/>
    
      <category term="varargs" scheme="http://www.msyy233.com/tags/varargs/"/>
    
  </entry>
  
  <entry>
    <title>Windows和Linux下JDK安装配置</title>
    <link href="http://www.msyy233.com/posts/1678.html"/>
    <id>http://www.msyy233.com/posts/1678.html</id>
    <published>2018-05-10T06:41:14.000Z</published>
    <updated>2018-05-16T06:41:14.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、下载&quot;&gt;&lt;a href=&quot;#一、下载&quot; class=&quot;headerlink&quot; title=&quot;一、下载&quot;&gt;&lt;/a&gt;一、下载&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;官网下载地址：&lt;/strong&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/archive-139210.html&quot;&gt;Oracle Java Archive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;根据需要下载相应JDK版本、系统版本和CPU位数&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;二、安装&quot;&gt;&lt;a href=&quot;#二、安装&quot; class=&quot;headerlink&quot; title=&quot;二、安装&quot;&gt;&lt;/a&gt;二、安装&lt;/h2&gt;&lt;h3 id=&quot;1、Windows下JDK安装&quot;&gt;&lt;a href=&quot;#1、Windows下JDK安装&quot; class=&quot;headerlink&quot; title=&quot;1、Windows下JDK安装&quot;&gt;&lt;/a&gt;1、Windows下JDK安装&lt;/h3&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.msyy233.com/categories/java/"/>
    
    
      <category term="java" scheme="http://www.msyy233.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Oracle11gR2 Centos6.x静默安装</title>
    <link href="http://www.msyy233.com/posts/28521.html"/>
    <id>http://www.msyy233.com/posts/28521.html</id>
    <published>2017-12-14T06:32:37.000Z</published>
    <updated>2021-07-24T13:33:47.797Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文资料来源：&lt;br&gt;&lt;a href=&quot;http://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm&quot;&gt;Oracle® Database Quick Installation Guide（linux_x64）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://docs.oracle.com/cd/E11882_01/install.112/e24324/toc.htm&quot;&gt;Oracle® Database Quick Installation Guide（linux_x86）&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、下载&quot;&gt;&lt;a href=&quot;#一、下载&quot; class=&quot;headerlink&quot; title=&quot;一、下载&quot;&gt;&lt;/a&gt;一、下载&lt;/h2&gt;&lt;p&gt;下载地址：&lt;a href=&quot;http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html&quot;&gt;Oracle Database Software Downloads&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://assets.msyy233.com/20180726/095340854.png!blog&quot; alt=&quot;Oracle许可证&quot;&gt;    &lt;/p&gt;
    
    </summary>
    
    
      <category term="oracle" scheme="http://www.msyy233.com/categories/oracle/"/>
    
    
      <category term="oracle" scheme="http://www.msyy233.com/tags/oracle/"/>
    
      <category term="静默安装" scheme="http://www.msyy233.com/tags/%E9%9D%99%E9%BB%98%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Maven Nexus OSS 2.xx 教程</title>
    <link href="http://www.msyy233.com/posts/9116.html"/>
    <id>http://www.msyy233.com/posts/9116.html</id>
    <published>2017-07-19T05:57:14.000Z</published>
    <updated>2017-07-22T05:57:14.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文资料来源：&lt;a href=&quot;http://books.sonatype.com/nexus-book/reference/index.html&quot;&gt;Nexus Documentation - Nexus Repository Manager 2.14&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、Nexus的下载和部署&quot;&gt;&lt;a href=&quot;#一、Nexus的下载和部署&quot; class=&quot;headerlink&quot; title=&quot;一、Nexus的下载和部署&quot;&gt;&lt;/a&gt;一、Nexus的下载和部署&lt;/h2&gt;&lt;h3 id=&quot;1、Nexus下载&quot;&gt;&lt;a href=&quot;#1、Nexus下载&quot; class=&quot;headerlink&quot; title=&quot;1、Nexus下载&quot;&gt;&lt;/a&gt;1、Nexus下载&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;官方下载地址：&lt;/strong&gt;&lt;a href=&quot;https://www.sonatype.com/download-oss-sonatype&quot;&gt;Download Nexus Repository OSS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意选择Nexus2.xx版本，本教程是基于Nexus2.xx。&lt;/em&gt;&lt;br&gt;&lt;strong&gt;如需要Nexus3.xx教程请移步：&lt;/strong&gt;&lt;a href=&quot;#&quot;&gt;Maven Nexus OSS 3.xx 教程（有时间写）&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2、Nexus部署和配置&quot;&gt;&lt;a href=&quot;#2、Nexus部署和配置&quot; class=&quot;headerlink&quot; title=&quot;2、Nexus部署和配置&quot;&gt;&lt;/a&gt;2、Nexus部署和配置&lt;/h3&gt;&lt;h4 id=&quot;配置JDK&quot;&gt;&lt;a href=&quot;#配置JDK&quot; class=&quot;headerlink&quot; title=&quot;配置JDK&quot;&gt;&lt;/a&gt;配置JDK&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;a href=&quot;http://www.msyy233.com/posts/1678.html&quot;&gt;JDK配置教程&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果上面教程看不明白可以谷歌或者百度一下、类似有很多&lt;br&gt;入门教程不做详细讲解&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="maven" scheme="http://www.msyy233.com/categories/maven/"/>
    
    
      <category term="maven" scheme="http://www.msyy233.com/tags/maven/"/>
    
      <category term="nexus" scheme="http://www.msyy233.com/tags/nexus/"/>
    
  </entry>
  
</feed>
